# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: ListNode, k: int) -> ListNode:
        if(head is  None):
            return
        node=head
        n=0
        while(node):
            n+=1
            node=node.next
        
        k=k%n
        if(k==0):
            return head
        m=n-k
        i=0
        prev=None
        node=head
        while(node and i<m):
            prev=node
            node=node.next
            i+=1
            Next=node
        
        prev.next=None
        
        head1=Next
        print(prev.val,head1.val)
        
        curr=head1
        while(curr.next):
            curr=curr.next
        
        curr.next=head
        return head1
